{"ast":null,"code":"import _slicedToArray from \"/root/transactions_add_eth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/root/transactions_add_eth/src/App.js\",\n  _s = $RefreshSig$();\n// import \"./styles.css\";\n\n// export default function App() {\n//   return (\n//     <div className=\"App\">\n//       <h1>All ETH transactions from an address</h1>\n//       <h2>Please enter the eth address</h2>\n//     </div>\n//   );\n// }\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _this = this;\n  // let [compteur,setCompteur] = useState(1);\n  // const handleclick = () => {\n  //   setCompteur(compteur +1) ; \n  // }\n  var _useState = useState({\n      id: 1,\n      nom: \"Abricot\"\n      // id : 2 , nom : \"Banane\",\n      // id : 3 , nom : \"P\",\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    fruits = _useState2[0],\n    setFruits = _useState2[1];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" liste de fruits \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: fruits.map(function (fruit) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", fruit.nom]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 20\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"sYRIfbS3Xm1gJhoS+/vJ8iThLcs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","_this","_useState","id","nom","_useState2","_slicedToArray","fruits","setFruits","children","fileName","_jsxFileName","lineNumber","columnNumber","map","fruit","_c","$RefreshReg$"],"sources":["/root/transactions_add_eth/src/App.js"],"sourcesContent":["// import \"./styles.css\";\n\n// export default function App() {\n//   return (\n//     <div className=\"App\">\n//       <h1>All ETH transactions from an address</h1>\n//       <h2>Please enter the eth address</h2>\n//     </div>\n//   );\n// }\n\nimport { useState } from \"react\";\nfunction App() {\n\n\n\n  // let [compteur,setCompteur] = useState(1);\n  // const handleclick = () => {\n  //   setCompteur(compteur +1) ; \n  // }\n  const [fruits, setFruits] = useState({\n    id : 1 , nom : \"Abricot\",\n    // id : 2 , nom : \"Banane\",\n    // id : 3 , nom : \"P\",\n  });\n\n  return (\n    <div> \n      {/* <h1> Bonjour </h1>\n      <h2> {compteur} </h2>\n      <button onClick={handleclick}>incremente</button> */}\n      <h3> liste de fruits </h3>\n        <ul>\n          {fruits.map((fruit) => {\n            return <li> {fruit.nom}</li>;\n          })}   \n        </ul>\n    </div>\n  );\n}\n\n\nexport default App;\n"],"mappings":";;;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,KAAA;EAIb;EACA;EACA;EACA;EACA,IAAAC,SAAA,GAA4BN,QAAQ,CAAC;MACnCO,EAAE,EAAG,CAAC;MAAGC,GAAG,EAAG;MACf;MACA;IACF,CAAC,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAJ,SAAA;IAJKK,MAAM,GAAAF,UAAA;IAAEG,SAAS,GAAAH,UAAA;EAMxB,oBACEP,OAAA;IAAAW,QAAA,gBAIEX,OAAA;MAAAW,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACxBf,OAAA;MAAAW,QAAA,EACGF,MAAM,CAACO,GAAG,CAAC,UAACC,KAAK,EAAK;QACrB,oBAAOjB,OAAA;UAAAW,QAAA,GAAI,GAAC,EAACM,KAAK,CAACX,GAAG;QAAA;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAZ,KAAA,CAAM;MAC9B,CAAC;IAAC;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEV;AAACb,EAAA,CA3BQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AA8BZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}