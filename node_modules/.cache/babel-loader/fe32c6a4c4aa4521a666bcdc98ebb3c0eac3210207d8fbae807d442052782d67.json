{"ast":null,"code":"import _regeneratorRuntime from \"/root/transactions_add_eth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/root/transactions_add_eth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/root/transactions_add_eth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/root/transactions_add_eth/src/TransactionList.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar TransactionsList = function TransactionsList(_ref) {\n  _s();\n  var address = _ref.address,\n    startBlock = _ref.startBlock;\n  // We use this variable to separate the user actions from the the transactions we got\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    transactions = _useState2[0],\n    setTransactions = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    status = _useState4[0],\n    setStatus = _useState4[1]; // If \"0\", it means the API of etherscan detected an error (address, API key or start block), so we make sure = \"1\" to work\n  var _useState5 = useState(),\n    _useState6 = _slicedToArray(_useState5, 2),\n    lastblock = _useState6[0],\n    setLastblock = _useState6[1]; // If \"0\", it means the API of etherscan detected an error (address, API key or start block), so we make sure = \"1\" to work\n\n  useEffect(function () {\n    // We use that to make no problem when we change the adress or the starting block\n    var fetchTransactions = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var apiKey, response, data;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              apiKey = \"7KT9JFYWU7UIGBUH4TV4QF21PTCE4W7UPN\"; // My own API key I created \n              _context.next = 3;\n              return fetch(\"https://api.etherscan.io/api?module=account&action=txlist&address=\".concat(address, \"&startblock=\").concat(startBlock, \"&apikey=\").concat(apiKey));\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return response.json();\n            case 6:\n              data = _context.sent;\n              // Transform the data in json\n              setTransactions(data.result); // Take the results from the API\n              setStatus(data.status); // Get the status, so that we know wether we have a list of transactions\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function fetchTransactions() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchTransactions();\n  }, [address, startBlock]); // Two dependencies (input) of the use effect\n\n  var fetchLastBlock = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var apiKey, response, data;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            apiKey = \"7KT9JFYWU7UIGBUH4TV4QF21PTCE4W7UPN\"; // My own API key I created \n            _context2.next = 3;\n            return fetch(\"https://api.etherscan.io/api?module=proxy&action=eth_blockNumber&apikey=\".concat(apiKey));\n          case 3:\n            response = _context2.sent;\n            _context2.next = 6;\n            return response.json();\n          case 6:\n            data = _context2.sent;\n            // Transform the data in json\n            setLastblock(parseInt(data.result, 16));\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n    return function fetchLastBlock() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  if (status === \"1\" && lastblock >= startBlock) {\n    // If the status is one, we got transactions ! We want the startblock to be less than the last block of the blokchain \n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"List of the transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Block Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"From\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Value (ETH)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [\" \", transactions.map(function (transaction) {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.blockNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.from\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.to\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: Number(transaction.value) / Math.pow(10, 18)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 19\n            }, _this)]\n          }, transaction.hash, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, _this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, _this);\n  } else {\n    // If the status is not equal to \"1\", it means there is a problem\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \" If the address and the start block is correct, it means there is no transactions ! Orelse, check your address and the starting block \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \" If the address and the start block is correct, it means there is no transactions ! Orelse, check your address and the starting block \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, _this);\n  }\n};\n_s(TransactionsList, \"KufmYSbLXicCHewPZ9/b9cMY7rE=\");\n_c = TransactionsList;\nexport default TransactionsList;\nvar _c;\n$RefreshReg$(_c, \"TransactionsList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TransactionsList","_ref","_s","address","startBlock","_useState","_useState2","_slicedToArray","transactions","setTransactions","_useState3","_useState4","status","setStatus","_useState5","_useState6","lastblock","setLastblock","fetchTransactions","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","apiKey","response","data","wrap","_callee$","_context","prev","next","fetch","concat","sent","json","result","stop","apply","arguments","fetchLastBlock","_ref3","_callee2","_callee2$","_context2","parseInt","children","fileName","_jsxFileName","lineNumber","columnNumber","_this","map","transaction","blockNumber","from","to","Number","value","Math","pow","hash","_c","$RefreshReg$"],"sources":["/root/transactions_add_eth/src/TransactionList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst TransactionsList = ({ address, startBlock }) => { // We use this variable to separate the user actions from the the transactions we got\n  const [transactions, setTransactions] = useState([]);\n  const [status, setStatus] = useState(); // If \"0\", it means the API of etherscan detected an error (address, API key or start block), so we make sure = \"1\" to work\n  const [lastblock, setLastblock] = useState(); // If \"0\", it means the API of etherscan detected an error (address, API key or start block), so we make sure = \"1\" to work\n\n\n  useEffect(() => { // We use that to make no problem when we change the adress or the starting block\n    const fetchTransactions = async () => {\n      const apiKey = \"7KT9JFYWU7UIGBUH4TV4QF21PTCE4W7UPN\"; // My own API key I created \n      const response = await fetch(`https://api.etherscan.io/api?module=account&action=txlist&address=${address}&startblock=${startBlock}&apikey=${apiKey}`); // Etherscan API use\n      const data = await response.json(); // Transform the data in json\n      setTransactions(data.result); // Take the results from the API\n      setStatus(data.status); // Get the status, so that we know wether we have a list of transactions\n    };\n    fetchTransactions();\n  }, [address, startBlock]); // Two dependencies (input) of the use effect\n\n  const fetchLastBlock = async () => { \n    const apiKey = \"7KT9JFYWU7UIGBUH4TV4QF21PTCE4W7UPN\"; // My own API key I created \n    const response = await fetch(`https://api.etherscan.io/api?module=proxy&action=eth_blockNumber&apikey=${apiKey}`); // We want the number of the last block of the blockchain ethereum\n    const data = await response.json(); // Transform the data in json\n    setLastblock(parseInt(data.result,16));\n  };\n\n  if (status === \"1\" && lastblock >= startBlock) { // If the status is one, we got transactions ! We want the startblock to be less than the last block of the blokchain \n      return (\n        <div>\n          <h2>List of the transactions</h2>\n            <thead>\n              <tr> {/* First ligne with all what will be displayed */}\n                <th>Block Number</th>\n                <th>From</th>\n                <th>To</th>\n                <th>Value (ETH)</th>\n              </tr>\n            </thead>\n            <tbody> {/* the hash being different for each transactions, we can use it as a key to display all transactions */}\n              {transactions.map((transaction) => ( \n                <tr key={transaction.hash}>\n                  <td>{transaction.blockNumber}</td>\n                  <td>{transaction.from}</td>\n                  <td>{transaction.to}</td>\n                  <td>{Number(transaction.value) / 10**18}</td>\n                </tr>\n              ))}\n            </tbody>\n        </div>\n      );\n   \n  } else { // If the status is not equal to \"1\", it means there is a problem\n    return (\n      <div>\n          <h3> If the address and the start block is correct, it means there is no transactions ! Orelse, check your address and the starting block </h3>\n          <h3> If the address and the start block is correct, it means there is no transactions ! Orelse, check your address and the starting block </h3>\n\n      </div>\n    );\n  }\n};\n\nexport default TransactionsList;\n"],"mappings":";;;;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAAC,IAAA,EAAgC;EAAAC,EAAA;EAAA,IAA1BC,OAAO,GAAAF,IAAA,CAAPE,OAAO;IAAEC,UAAU,GAAAH,IAAA,CAAVG,UAAU;EAAS;EACtD,IAAAC,SAAA,GAAwCT,QAAQ,CAAC,EAAE,CAAC;IAAAU,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7CG,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EACpC,IAAAI,UAAA,GAA4Bd,QAAQ,EAAE;IAAAe,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA/BE,MAAM,GAAAD,UAAA;IAAEE,SAAS,GAAAF,UAAA,IAAe,CAAC;EACxC,IAAAG,UAAA,GAAkClB,QAAQ,EAAE;IAAAmB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAArCE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA,IAAe,CAAC;;EAG9ClB,SAAS,CAAC,YAAM;IAAE;IAChB,IAAMqB,iBAAiB;MAAA,IAAAC,KAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAA;QAAA,IAAAC,MAAA,EAAAC,QAAA,EAAAC,IAAA;QAAA,OAAAL,mBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAClBP,MAAM,GAAG,oCAAoC,EAAE;cAAAK,QAAA,CAAAE,IAAA;cAAA,OAC9BC,KAAK,sEAAAC,MAAA,CAAsE9B,OAAO,kBAAA8B,MAAA,CAAe7B,UAAU,cAAA6B,MAAA,CAAWT,MAAM,EAAG;YAAA;cAAhJC,QAAQ,GAAAI,QAAA,CAAAK,IAAA;cAAAL,QAAA,CAAAE,IAAA;cAAA,OACKN,QAAQ,CAACU,IAAI,EAAE;YAAA;cAA5BT,IAAI,GAAAG,QAAA,CAAAK,IAAA;cAA0B;cACpCzB,eAAe,CAACiB,IAAI,CAACU,MAAM,CAAC,CAAC,CAAC;cAC9BvB,SAAS,CAACa,IAAI,CAACd,MAAM,CAAC,CAAC,CAAC;YAAA;YAAA;cAAA,OAAAiB,QAAA,CAAAQ,IAAA;UAAA;QAAA,GAAAd,OAAA;MAAA,CACzB;MAAA,gBANKL,iBAAiBA,CAAA;QAAA,OAAAC,KAAA,CAAAmB,KAAA,OAAAC,SAAA;MAAA;IAAA,GAMtB;IACDrB,iBAAiB,EAAE;EACrB,CAAC,EAAE,CAACf,OAAO,EAAEC,UAAU,CAAC,CAAC,CAAC,CAAC;;EAE3B,IAAMoC,cAAc;IAAA,IAAAC,KAAA,GAAArB,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAoB,SAAA;MAAA,IAAAlB,MAAA,EAAAC,QAAA,EAAAC,IAAA;MAAA,OAAAL,mBAAA,GAAAM,IAAA,UAAAgB,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAAd,IAAA,GAAAc,SAAA,CAAAb,IAAA;UAAA;YACfP,MAAM,GAAG,oCAAoC,EAAE;YAAAoB,SAAA,CAAAb,IAAA;YAAA,OAC9BC,KAAK,4EAAAC,MAAA,CAA4ET,MAAM,EAAG;UAAA;YAA3GC,QAAQ,GAAAmB,SAAA,CAAAV,IAAA;YAAAU,SAAA,CAAAb,IAAA;YAAA,OACKN,QAAQ,CAACU,IAAI,EAAE;UAAA;YAA5BT,IAAI,GAAAkB,SAAA,CAAAV,IAAA;YAA0B;YACpCjB,YAAY,CAAC4B,QAAQ,CAACnB,IAAI,CAACU,MAAM,EAAC,EAAE,CAAC,CAAC;UAAC;UAAA;YAAA,OAAAQ,SAAA,CAAAP,IAAA;QAAA;MAAA,GAAAK,QAAA;IAAA,CACxC;IAAA,gBALKF,cAAcA,CAAA;MAAA,OAAAC,KAAA,CAAAH,KAAA,OAAAC,SAAA;IAAA;EAAA,GAKnB;EAED,IAAI3B,MAAM,KAAK,GAAG,IAAII,SAAS,IAAIZ,UAAU,EAAE;IAAE;IAC7C,oBACEL,OAAA;MAAA+C,QAAA,gBACE/C,OAAA;QAAA+C,QAAA,EAAI;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAA,CAAK,eAC/BpD,OAAA;QAAA+C,QAAA,eACE/C,OAAA;UAAA+C,QAAA,GAAI,GAAC,eACH/C,OAAA;YAAA+C,QAAA,EAAI;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KAAA,CAAK,eACrBpD,OAAA;YAAA+C,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KAAA,CAAK,eACbpD,OAAA;YAAA+C,QAAA,EAAI;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KAAA,CAAK,eACXpD,OAAA;YAAA+C,QAAA,EAAI;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KAAA,CAAK;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KAAA;MACjB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAA,CACC,eACRpD,OAAA;QAAA+C,QAAA,GAAO,GAAC,EACLtC,YAAY,CAAC4C,GAAG,CAAC,UAACC,WAAW;UAAA,oBAC5BtD,OAAA;YAAA+C,QAAA,gBACE/C,OAAA;cAAA+C,QAAA,EAAKO,WAAW,CAACC;YAAW;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,GAAAC,KAAA,CAAM,eAClCpD,OAAA;cAAA+C,QAAA,EAAKO,WAAW,CAACE;YAAI;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,GAAAC,KAAA,CAAM,eAC3BpD,OAAA;cAAA+C,QAAA,EAAKO,WAAW,CAACG;YAAE;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,GAAAC,KAAA,CAAM,eACzBpD,OAAA;cAAA+C,QAAA,EAAKW,MAAM,CAACJ,WAAW,CAACK,KAAK,CAAC,GAAAC,IAAA,CAAAC,GAAA,CAAG,EAAE,EAAE,EAAE;YAAA;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,GAAAC,KAAA,CAAM;UAAA,GAJtCE,WAAW,CAACQ,IAAI;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KAAA,CAKpB;QAAA,CACN,CAAC;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAA,CACI;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAA,CACN;EAGZ,CAAC,MAAM;IAAE;IACP,oBACEpD,OAAA;MAAA+C,QAAA,gBACI/C,OAAA;QAAA+C,QAAA,EAAI;MAAsI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAA,CAAK,eAC/IpD,OAAA;QAAA+C,QAAA,EAAI;MAAsI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAA,CAAK;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAA,CAE7I;EAEV;AACF,CAAC;AAACjD,EAAA,CA1DIF,gBAAgB;AAAA8D,EAAA,GAAhB9D,gBAAgB;AA4DtB,eAAeA,gBAAgB;AAAC,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}